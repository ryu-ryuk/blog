<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>stderr.log@ryu</title>
    <subtitle>Tech, Rust, Cybersecurity, and Notes</subtitle>
    <link rel="self" type="application/atom+xml" href="https://blogs.alokranjan.me/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blogs.alokranjan.me"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-07-19T00:00:00+00:00</updated>
    <id>https://blogs.alokranjan.me/atom.xml</id>
    <entry xml:lang="en">
        <title>Agentic AI: planning, reasoning, and acting with Autonomy</title>
        <published>2025-07-19T00:00:00+00:00</published>
        <updated>2025-07-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            ryu
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blogs.alokranjan.me/blog/agentic-ai/"/>
        <id>https://blogs.alokranjan.me/blog/agentic-ai/</id>
        
        <content type="html" xml:base="https://blogs.alokranjan.me/blog/agentic-ai/">&lt;h2 id=&quot;what-is-an-agentic-ai&quot;&gt;What is an Agentic AI&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Agentic AI&lt;&#x2F;strong&gt; refers to systems that &lt;em&gt;don’t&lt;&#x2F;em&gt; just answer questions, but can plan, decide, and act on their own.&lt;&#x2F;p&gt;
&lt;p&gt;They use LLMs + Tools + Memory to handle Multi-Step Tasks without being told exactly what to do at each step.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-example&quot;&gt;For example:&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;You say “&lt;strong&gt;Book me a trip to Delhi this weekend under Rs.5000.&lt;&#x2F;strong&gt;”
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;&lt;strong&gt;Agentic AI&lt;&#x2F;strong&gt; might&lt;&#x2F;em&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Search for flights &amp;amp; buses.&lt;&#x2F;li&gt;
&lt;li&gt;Check Hotels.&lt;&#x2F;li&gt;
&lt;li&gt;Compare Costs.&lt;&#x2F;li&gt;
&lt;li&gt;Make bookings via APIs.&lt;&#x2F;li&gt;
&lt;li&gt;Email you the plan.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Now, this is way beyond just generating text - this is actual &lt;strong&gt;Decision + Action&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;characterstics-of-agentic-ai&quot;&gt;Characterstics of Agentic AI:&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Goal-Oriented Planning&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It starts &lt;strong&gt;with a goal&lt;&#x2F;strong&gt;, then breaks it into smaller steps and executes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Multi-Step Reasoning&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It doesn’t stop at one reply - it &lt;em&gt;iteratively&lt;&#x2F;em&gt; reasons until the goal is met.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Autonomous Decision-Making&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It chooses &lt;strong&gt;the best path&lt;&#x2F;strong&gt; or the tool on its own, based on the whatever context it has in that situation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uses Memory, Tools and Knowledge&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Remembers Past Events (long term memory or conversational memory), uses APIs&#x2F;Scripts (tools), and refers to the docs or rules (Knowledge Base).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;what-makes-agentic-ai-different-from-basic-llms&quot;&gt;What makes Agentic AI different from Basic LLMs?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Normal LLMs (Chat GPT, Gemini, Perplexity etc.) are &lt;strong&gt;Passive&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;They just respond to a prompt.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Agentic Systems are &lt;strong&gt;Active&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;They observe, think, plan, act, and even revise their actions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;basic-agentic-structure&quot;&gt;Basic Agentic Structure&lt;&#x2F;h2&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;blogs.alokranjan.me&#x2F;blog&#x2F;agentic-ai&#x2F;agentic.png&quot; alt=&quot;agentic-ai&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;figcaption&gt;Architecture of an Agentic AI&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;br &#x2F;&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;agentic-ai-vs-ai-workflow&quot;&gt;Agentic AI VS AI Workflow&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Term&lt;&#x2F;th&gt;&lt;th&gt;What it means&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;AI workflow&lt;&#x2F;td&gt;&lt;td&gt;Pre-defined steps using AI (e.g. RAG pipeline)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Agent&lt;&#x2F;td&gt;&lt;td&gt;Dynamic reasoning &amp;amp; acting system that &lt;strong&gt;adapts&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;ReAct Agent&lt;&#x2F;td&gt;&lt;td&gt;&lt;em&gt;Reason + Act&lt;&#x2F;em&gt;: Think, Decide, take Action&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Control logic&lt;&#x2F;td&gt;&lt;td&gt;Like if&#x2F;else to guide actions&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Tools&lt;&#x2F;td&gt;&lt;td&gt;External Functions&#x2F;APIs&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Memory&lt;&#x2F;td&gt;&lt;td&gt;Past info&#x2F;context retained&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Planner&lt;&#x2F;td&gt;&lt;td&gt;Creates a step-wise plan&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;llms-in-this-context&quot;&gt;LLMs in this context&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LLMs&lt;&#x2F;strong&gt; (like GPT, Gemini, Claude) are the &lt;strong&gt;Core Brains&lt;&#x2F;strong&gt; of the system.&lt;&#x2F;li&gt;
&lt;li&gt;But on their own, they can’t remember, act or plan.&lt;&#x2F;li&gt;
&lt;li&gt;We wrap them in &lt;strong&gt;Agents&lt;&#x2F;strong&gt; to extend their &lt;em&gt;ability&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;agentic-ai-example&quot;&gt;Agentic AI Example&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AI Coding Assistant&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Can Understand bug report, edits code, runs tests, commits.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Travel Agent&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;As we have already seen the example above; There are a &lt;em&gt;gazillion&lt;&#x2F;em&gt; use-cases of Agentic AI in various domains.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;A few more examples would be an &lt;em&gt;HR Onboarding Bot&lt;&#x2F;em&gt;, An Agent that posts for you on LinkedIn, the list &lt;em&gt;goes on&lt;&#x2F;em&gt;~&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;let-s-recap&quot;&gt;Let’s recap&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;LLM = &lt;strong&gt;Brain&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Agent = &lt;strong&gt;Brain + Body&lt;&#x2F;strong&gt;(Tools&#x2F;Memory&#x2F;Planner)&lt;&#x2F;li&gt;
&lt;li&gt;Agentic AI = &lt;strong&gt;Autonomous Worker&lt;&#x2F;strong&gt; that thinks and achieves &lt;strong&gt;&lt;em&gt;any goal&lt;&#x2F;em&gt;&lt;&#x2F;strong&gt; given to it&lt;&#x2F;li&gt;
&lt;li&gt;Multi-Turn Planning = Not just simple answers, but &lt;em&gt;strategic answers&lt;&#x2F;em&gt; driven by context&lt;&#x2F;li&gt;
&lt;li&gt;ReAct Loop = &lt;strong&gt;Reason -&amp;gt; Act -&amp;gt; Observe -&amp;gt; Repeat&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;br&gt;
&lt;blockquote class=&quot;important&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Important&lt;&#x2F;p&gt;
	&lt;p&gt;Before finishing up this blog; I would like for you to read this &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropic.com&#x2F;engineering&#x2F;building-effective-agents&quot;&gt;Amazing Blog by Anthropic on building Agentic AI&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Building a Containerized Financial Data API with FastAPI and Docker</title>
        <published>2025-07-18T00:00:00+00:00</published>
        <updated>2025-07-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            ryu
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blogs.alokranjan.me/blog/inv/"/>
        <id>https://blogs.alokranjan.me/blog/inv/</id>
        
        <content type="html" xml:base="https://blogs.alokranjan.me/blog/inv/">&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;how-it-started&quot;&gt;How it started?&lt;&#x2F;h2&gt;
&lt;p&gt;Yesterday, I received a backend assignment from Invsto. the goal was to build a containerized API service that could store, serve, and analyze Stock price data.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;what-s-inside&quot;&gt;What’s inside?&lt;&#x2F;h2&gt;
&lt;p&gt;I built a complete FastAPI backend with the following key components:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;PostgreSQL&lt;&#x2F;strong&gt; database to store time-series price data&lt;&#x2F;li&gt;
&lt;li&gt;a clean rest &lt;strong&gt;API&lt;&#x2F;strong&gt; to ingest and retrieve it&lt;&#x2F;li&gt;
&lt;li&gt;a &lt;em&gt;moving average crossover strategy&lt;&#x2F;em&gt; to analyze market trends&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;unit tests&lt;&#x2F;strong&gt; with over &lt;strong&gt;&lt;em&gt;90% coverage&lt;&#x2F;em&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;a fully &lt;strong&gt;dockerized&lt;&#x2F;strong&gt; environment, orchestrated via &lt;strong&gt;make&lt;&#x2F;strong&gt; commands&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;but beyond the checklist, what made this project worthwhile was how it &lt;em&gt;felt&lt;&#x2F;em&gt; like building something production-ready—debugging tests, handling edge cases, and documenting everything like it mattered; because I had planned to log it in this blogging website (finally)&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;the-trading-logic&quot;&gt;The Trading Logic!&lt;&#x2F;h2&gt;
&lt;p&gt;at the core is a simple but &lt;strong&gt;Effective Trading Strategy&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;take two moving averages—one short (20-day), one long (50-day)&lt;&#x2F;li&gt;
&lt;li&gt;when the short average crosses &lt;em&gt;above&lt;&#x2F;em&gt; the long, that’s a &lt;strong&gt;Buy&lt;&#x2F;strong&gt; signal&lt;&#x2F;li&gt;
&lt;li&gt;when it crosses &lt;em&gt;below&lt;&#x2F;em&gt;, that’s a &lt;strong&gt;Sell&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;the system scans the data for crossover points and calculates basic profit&#x2F;loss from those trades. simple logic, but implementing it cleanly, testably, and in a way that integrates into an API—that’s where the challenge lies.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;uff-bugs&quot;&gt;Uff! Bugs&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;beetle-test-db-nightmare&quot;&gt;🐞 Test DB nightmare&lt;&#x2F;h3&gt;
&lt;p&gt;Early on, tests kept failing even though they used a separate sqlite database. turned out they were accidentally connecting to the dev postgres container—resulting in state bleed and weird errors.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;fix&lt;&#x2F;strong&gt;: I updated the test setup to fully isolate the sqlite test DB, and cleaned stale containers using &lt;code&gt;make down&lt;&#x2F;code&gt;.
&lt;strong&gt;lesson&lt;&#x2F;strong&gt;: To double-check your test environment assumptions.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;beetle-strategy-returns-0-trades&quot;&gt;🐞 Strategy returns “0 trades”&lt;&#x2F;h3&gt;
&lt;p&gt;My tests expected a buy signal—but the logic returned nothing.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;fix&lt;&#x2F;strong&gt;: Turns out my strategy only counts &lt;em&gt;full trades&lt;&#x2F;em&gt; (buy + sell). the test data had a buy signal, but no corresponding sell. I had to redesign the test to simulate a full market cycle.
&lt;strong&gt;lesson&lt;&#x2F;strong&gt;: Test data should reflect the exact logic you’re testing—not just part of it.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;reflections&quot;&gt;Reflections ~&lt;&#x2F;h2&gt;
&lt;p&gt;This project taught me a lot—not just about FastAPI, Docker, or (&lt;em&gt;specially&lt;&#x2F;em&gt;)&lt;strong&gt;pandas&lt;&#x2F;strong&gt;—but about treating small assignments like real systems. the biggest win wasn’t just getting it to work, but making it clean, testable, and explainable.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;visuals&quot;&gt;Visuals&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a live recorded demo in the GitHub Repo as well!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;raw-data&quot;&gt;raw data&lt;&#x2F;h3&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;blogs.alokranjan.me&#x2F;blog&#x2F;inv&#x2F;data.webp&quot; alt=&quot;data&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;figcaption&gt;the raw data in the endpoint `&#x2F;data`&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;br &#x2F;&gt;
&lt;h3 id=&quot;strategy-performance&quot;&gt;strategy performance&lt;&#x2F;h3&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;blogs.alokranjan.me&#x2F;blog&#x2F;inv&#x2F;perf.webp&quot; alt=&quot;strategy&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;figcaption&gt;preview of the `&#x2F;strategy&#x2F;performance` endpoint&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;br &#x2F;&gt;
&lt;h3 id=&quot;test-coverage&quot;&gt;test coverage&lt;&#x2F;h3&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;blogs.alokranjan.me&#x2F;blog&#x2F;inv&#x2F;test.webp&quot; alt=&quot;test&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;figcaption&gt;tests report&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;br &#x2F;&gt;
&lt;h2 id=&quot;source-code&quot;&gt;source code&lt;&#x2F;h2&gt;
&lt;p&gt;Check out the full code, project structure, and setup instructions here:
&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryu-ryuk&#x2F;inv&quot;&gt;github.com&#x2F;ryu-ryuk&#x2F;inv&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>who tis the?</title>
        <published>2025-05-27T00:00:00+00:00</published>
        <updated>2025-05-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            who else but ME
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blogs.alokranjan.me/blog/intro/"/>
        <id>https://blogs.alokranjan.me/blog/intro/</id>
        
        <content type="html" xml:base="https://blogs.alokranjan.me/blog/intro/">&lt;h2 id=&quot;intro&quot;&gt;intro&lt;&#x2F;h2&gt;
&lt;p&gt;let’s get to it now. Let me brief you a little bit about myself~&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;who am i? &lt;strong&gt;Alok&lt;&#x2F;strong&gt; but i am known as “&lt;strong&gt;&lt;em&gt;ryu&lt;&#x2F;em&gt;&lt;&#x2F;strong&gt;” on the internet, an ECE|DS undergrad student (what is this place? hell?),&lt;&#x2F;li&gt;
&lt;li&gt;where am i from? &lt;strong&gt;Earth&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;juggling college together with personal projects like this or Yoru (&lt;em&gt;secret&lt;&#x2F;em&gt;) and some professional work over at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iitm-paradox&quot;&gt;IIT Madras&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-plans-do-i-have-in-the-near-future&quot;&gt;what plans do I have in the near future?&lt;&#x2F;h2&gt;
&lt;p&gt;(besides living)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;apart from improving my typing skills, i really want to learn Japanese; enough to understand the words shown in anime.&lt;&#x2F;li&gt;
&lt;li&gt;improve in Rust and excel in GO. to know about my skill-set; you can simply go &lt;a href=&quot;https:&#x2F;&#x2F;alokranjan.me&#x2F;about&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;cybersecurity [ace something like hackthebox].&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;interests&quot;&gt;interests?&lt;&#x2F;h2&gt;
&lt;p&gt;let me not get nerdy here&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;I enjoy playing &lt;strong&gt;Badminton&lt;&#x2F;strong&gt; more than anything for now, it is simply bliss for me.&lt;&#x2F;li&gt;
&lt;li&gt;other than that, I love &lt;strong&gt;cooking&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;phonk&lt;&#x2F;strong&gt; makes me feel good.&lt;&#x2F;li&gt;
&lt;li&gt;learning about tech brings me pleasure.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;projects&quot;&gt;projects&lt;&#x2F;h2&gt;
&lt;p&gt;i should keep this short so; I’m gonna have to ask you to go &lt;a href=&quot;https:&#x2F;&#x2F;alokranjan.me&#x2F;projects&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tl-dr&quot;&gt;TL;DR&lt;&#x2F;h2&gt;
&lt;p&gt;:0&lt;&#x2F;p&gt;
&lt;p&gt;before we say goodbye here, i want to credit the duckquill theme creators for the idea of this blog site. and ofcourse people at Catppuccin for the theme colors you guys are cool &amp;lt;3&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
